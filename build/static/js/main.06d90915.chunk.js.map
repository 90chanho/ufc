{"version":3,"sources":["theme/theme.js","components/AppGnb/AppGnb.js","components/AppHeader/AppHeader.js","components/AppMain/AppMain.js","components/App/App.js","config/serviceWorker.js","index.js","assets/img/background_header.jpg","assets/img/ufc.svg"],"names":["theme","lightMode","bgColor","textColor","bgColorInvert","textColorInvert","darkMode","Container","styled","nav","AppGnb","props","handleMouseOver","e","left","target","offsetLeft","width","offsetWidth","underlineElement","current","setAttribute","React","createRef","className","this","href","title","src","ufc","alt","onMouseOver","ref","Component","header","BgHeader","AppHeader","div","AppMain","App","useState","default","ThemeStyle","themeState","test","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.06d90915.chunk.js","sourcesContent":["const theme = {\n\tlightMode: {\n\t\tbgColor: \"#fff\",\n\t\ttextColor: \"#000\",\n\t\tbgColorInvert: \"#000\",\n\t\ttextColorInvert: \"#fff\"\n\t},\n\tdarkMode: {\n\t\tbgColor: \"#000\",\n\t\ttextColor: \"#fff\",\n\t\tbgColorInvert: \"#fff\",\n\t\ttextColorInvert: \"#000\"\n\t}\n}\n\nexport default theme\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\n\nimport ufc from \"assets/img/ufc.svg\"\n\nconst Container = styled.nav`\n\tbackground-color: ${({ theme }) => theme.bgColor};\n\tcolor: ${({ theme }) => theme.textColor};\n\n\tposition: absolute;\n\ttop: 50px;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\twidth: 100%;\n\tmax-width: 1024px;\n\n\t.logo {\n\t\tposition: absolute;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\n\t\timg {\n\t\t\tdisplay: inline-block;\n\t\t\twidth: 80px;\n\t\t\theight: auto;\n\t\t}\n\t}\n\n\t.gnb {\n\t\tdisplay: flex;\n\n\t\tli {\n\t\t\tpadding: 1rem;\n\n\t\t\t&.align-right {\n\t\t\t\tmargin-left: auto;\n\t\t\t}\n\n\t\t\t&.hoverUnderline {\n\t\t\t\tposition: absolute;\n\t\t\t\tbottom: 0;\n\t\t\t\twidth: 0px;\n\t\t\t\theight: 2px;\n\t\t\t\tborder-bottom: 4px solid #cc0b0b;\n\t\t\t\tpadding: 0;\n\t\t\t\ttransition: all 0.3s ease-in-out;\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport default class AppGnb extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.underlineElement = React.createRef()\n\t}\n\n\thandleMouseOver = e => {\n\t\tconst left = e.target.offsetLeft\n\t\tconst width = e.target.offsetWidth\n\t\tthis.underlineElement.current.setAttribute(\"style\", `width: ${width}px; left: ${left}px`)\n\t}\n\n\trender() {\n\t\tconst { className } = this.props\n\t\treturn (\n\t\t\t<Container className={className}>\n\t\t\t\t<h1 className=\"logo noTextContent\">\n\t\t\t\t\t<a href=\"/\" title=\"go to home\" className=\"noTextContent\">\n\t\t\t\t\t\t<img src={ufc} className=\"App__Logo\" alt=\"UFC\" />\n\t\t\t\t\t</a>\n\t\t\t\t</h1>\n\t\t\t\t<ul className=\"gnb\">\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>플라이급</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>벤텀급</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>페더급</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>라이트급</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver} className=\"align-right\">\n\t\t\t\t\t\t웰터급\n\t\t\t\t\t</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>미들급</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>라이트헤비급</li>\n\t\t\t\t\t<li onMouseOver={this.handleMouseOver}>헤비급</li>\n\t\t\t\t\t<li className=\"hoverUnderline\" ref={this.underlineElement}></li>\n\t\t\t\t</ul>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\n\nimport BgHeader from \"assets/img/background_header.jpg\"\nimport AppGnb from \"components/AppGnb/AppGnb\"\n\nconst Container = styled.header`\n\tbackground-image: url(${BgHeader});\n\tbackground-attachment: fixed;\n\tmin-height: 100vh;\n\tbackground-size: cover;\n\tbackground-position: center center;\n\tmargin: 0 auto;\n\tfont-size: calc(10px + 2vmin);\n\tcolor: ${({ theme }) => theme.textColorInvert};\n\ttext-align: center;\n\n\tdiv {\n\t\tpadding-top: 20rem;\n\t\t.App__Desc {\n\t\t\tfont-size: 3rem;\n\t\t\tfont-weight: bold;\n\t\t\ttext-shadow: 1px 1px 1px #cc0b0b;\n\t\t}\n\n\t\tdl {\n\t\t\tmargin-top: 2rem;\n\t\t\tdt {\n\t\t\t\tfont-size: 2rem;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tpadding-bottom: 2rem;\n\t\t\t}\n\t\t}\n\t}\n`\n\nclass AppHeader extends Component {\n\trender() {\n\t\tconst { className } = this.props\n\t\treturn (\n\t\t\t<Container className={`App__Header ${className}`}>\n\t\t\t\t<AppGnb />\n\t\t\t\t<div>\n\t\t\t\t\t<p className=\"App__Desc\">CRA를 사용하여 제작한 UFC 홈페이지</p>\n\t\t\t\t\t<dl>\n\t\t\t\t\t\t<dt>Use Skill</dt>\n\t\t\t\t\t\t<dd>React</dd>\n\t\t\t\t\t\t<dd>styled-component</dd>\n\t\t\t\t\t\t<dd>scss</dd>\n\t\t\t\t\t\t<dd>redux</dd>\n\t\t\t\t\t\t<dd>react-router</dd>\n\t\t\t\t\t</dl>\n\t\t\t\t</div>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default AppHeader\n","import React, { Component } from \"react\"\nimport styled from \"styled-components\"\n\nconst Container = styled.div`\n\tbackground-color: ${({ theme }) => theme.bgColor};\n\tcolor: ${({ theme }) => theme.textColor};\n`\n\nclass AppMain extends Component {\n\trender() {\n\t\tconst { className } = this.props\n\t\treturn <Container className={className}>안녕 나는 AppMain 컨텐츠야 ^^</Container>\n\t}\n}\n\n// const StyledAppMain = styled(AppMain)`\n//   ${props => console.log(\"AppMain props =\", props)}\n// \tcolor: ${({ theme }) => theme.textColor};\n// `\n\n// export default withTheme(StyledAppMain)\nexport default AppMain\n","import React, { useState } from \"react\"\nimport { ThemeProvider } from \"styled-components\"\n\nimport ThemeStyle from \"theme/theme\"\nimport AppHeader from \"components/AppHeader/AppHeader\"\nimport AppMain from \"components/AppMain/AppMain\"\n\n// components\nconst App = props => {\n\tconst [themeState, setTheme] = useState({\n\t\tdefault: true,\n\t\ttheme: ThemeStyle.lightMode\n\t})\n\n\t// const toggleTheme = () => {\n\t// \tthemeState.default\n\t// \t\t? setTheme({ default: false, theme: ThemeStyle.darkMode })\n\t// \t\t: setTheme({ default: true, theme: ThemeStyle.lightMode })\n\t// }\n\n\treturn (\n\t\t<ThemeProvider theme={themeState.theme}>\n\t\t\t<div className=\"App\">\n\t\t\t\t{/* <label htmlFor=\"Theme\">\n\t\t\t\t\t<input id=\"Theme\" type=\"checkbox\" onChange={toggleTheme} />\n\t\t\t\t\tTheme 설정하기 {themeState.default ? \"true\" : \"false\"}\n\t\t\t\t</label> */}\n\t\t\t\t<AppHeader />\n\t\t\t\t<AppMain test=\"hello\" />\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","// 이 코드는 서비스 워커를 등록하는 데 사용됩니다.\n// 기본적으로 register()는 호출되지 않습니다.\n\n// 이렇게 하면 이후 프로덕션 방문시 앱이 더 빠르게 로드 되고 오프라인 기능이 제공됩니다.\n// 그러나 이전에 캐시 된 리소스가 백그라운드에서 업데이트 되므로 개발자와 사용자는 페이지에서 열린\n// 기존 탭을 모두 닫은 후 페이지를 방문 할 때 배포 된 업데이트만 볼 수 있습니다.\n\n// 이 모델의 장점과 옵트 인 방법에 대한 자세한 내용은 https://bit.ly/CRA-PWA 를 참고하세요.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      }\n      else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            }\n            else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      }\n      else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie11\"\nimport \"styles/index.css\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App/App\"\nimport * as serviceWorker from \"config/serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"reactApp\"))\n\n// 앱을 오프라인에서 작동시키고 보다 빠르게 로드 하고자 한다면?\n// 아래 코드의 unregister()를 register()로 변경합니다.\n// [⚠️주의! 이 방법은 몇 가지 문제를 발생할 수 있습니다.]\n// 서비스 워커에 대해 자세히 알아보기: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === \"production\") {\n\tserviceWorker.register()\n}\n","module.exports = __webpack_public_path__ + \"static/media/background_header.27d2ac65.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ufc.88f7e369.svg\";"],"sourceRoot":""}